// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2018-04-17 17:46:00.981522 +0100 BST m=+0.019959489
package model

type ReturnStatusCode int64

const (
	MarketNotActive                   ReturnStatusCode = 15
	SelectionNotActive                ReturnStatusCode = 17
	OrderDoesNotExist                 ReturnStatusCode = 21
	NoUnmatchedAmount                 ReturnStatusCode = 22
	ResetHasOccurred                  ReturnStatusCode = 114
	TradingCurrentlySuspended         ReturnStatusCode = 128
	InvalidOdds                       ReturnStatusCode = 131
	WithdrawalSequenceNumberIsInvalid ReturnStatusCode = 136
	MaximumInputRecordsExceeded       ReturnStatusCode = 137
	PunterSuspended                   ReturnStatusCode = 208
	PunterProhibitedFromPlacingOrders ReturnStatusCode = 240
	InsufficientPunterFunds           ReturnStatusCode = 241
	OrderAPIInProgress                ReturnStatusCode = 271
	PunterOrderMismatch               ReturnStatusCode = 274
	InRunningDelayInEffect            ReturnStatusCode = 293
	DuplicateOrderSpecified           ReturnStatusCode = 299
	PunterIsSuspendedFromTrading      ReturnStatusCode = 302
	ExpiryTimeInThePast               ReturnStatusCode = 305
	NoChangeSpecified                 ReturnStatusCode = 306
	PunterIsBlacklisted               ReturnStatusCode = 406
)


type MarketType_Status int64

type TradeItemType_TradeType int64

type SimpleOrderRequest_WithdrawalRepriceOption int64

type GetOrderDetailsResult_OrderStatus int64

type GetOrderDetailsResult_OrderFillType int64

type GetOrderDetailsResult_MarketStatus int64

type GetOrderDetailsResult_WithdrawalRepriceOption int64

type RegisterHeartbeatRequest_HeartbeatAction int64

type ChangeHeartbeatRegistrationRequest_HeartbeatAction int64

type PulseResult_HeartbeatAction int64


const (


    MarketType_Status_Inactive MarketType_Status = 1
    MarketType_Status_Active MarketType_Status = 2
    MarketType_Status_Suspended MarketType_Status = 3
    MarketType_Status_Withdrawn MarketType_Status = 4
    MarketType_Status_BallotedOut MarketType_Status = 9
    MarketType_Status_Voided MarketType_Status = 5
    MarketType_Status_Completed MarketType_Status = 6
    MarketType_Status_Settled MarketType_Status = 8

    TradeItemType_TradeType_Back TradeItemType_TradeType = 1
    TradeItemType_TradeType_Lay TradeItemType_TradeType = 2

    SimpleOrderRequest_WithdrawalRepriceOption_Reprice SimpleOrderRequest_WithdrawalRepriceOption = 1
    SimpleOrderRequest_WithdrawalRepriceOption_Cancel SimpleOrderRequest_WithdrawalRepriceOption = 2
    SimpleOrderRequest_WithdrawalRepriceOption_DontReprice SimpleOrderRequest_WithdrawalRepriceOption = 3

    GetOrderDetailsResult_OrderStatus_Unmatched GetOrderDetailsResult_OrderStatus = 1
    GetOrderDetailsResult_OrderStatus_Matched GetOrderDetailsResult_OrderStatus = 2
    GetOrderDetailsResult_OrderStatus_Cancelled GetOrderDetailsResult_OrderStatus = 3
    GetOrderDetailsResult_OrderStatus_Settled GetOrderDetailsResult_OrderStatus = 4
    GetOrderDetailsResult_OrderStatus_Void GetOrderDetailsResult_OrderStatus = 5
    GetOrderDetailsResult_OrderStatus_Suspended GetOrderDetailsResult_OrderStatus = 6

    GetOrderDetailsResult_OrderFillType_Normal GetOrderDetailsResult_OrderFillType = 1
    GetOrderDetailsResult_OrderFillType_FillAndKill GetOrderDetailsResult_OrderFillType = 2
    GetOrderDetailsResult_OrderFillType_FillOrKill GetOrderDetailsResult_OrderFillType = 3
    GetOrderDetailsResult_OrderFillType_FillOrKillDontCancel GetOrderDetailsResult_OrderFillType = 4

    GetOrderDetailsResult_MarketStatus_Inactive GetOrderDetailsResult_MarketStatus = 1
    GetOrderDetailsResult_MarketStatus_Active GetOrderDetailsResult_MarketStatus = 2
    GetOrderDetailsResult_MarketStatus_Suspended GetOrderDetailsResult_MarketStatus = 3
    GetOrderDetailsResult_MarketStatus_Completed GetOrderDetailsResult_MarketStatus = 4
    GetOrderDetailsResult_MarketStatus_Settled GetOrderDetailsResult_MarketStatus = 6
    GetOrderDetailsResult_MarketStatus_Voided GetOrderDetailsResult_MarketStatus = 7

    GetOrderDetailsResult_WithdrawalRepriceOption_Reprice GetOrderDetailsResult_WithdrawalRepriceOption = 1
    GetOrderDetailsResult_WithdrawalRepriceOption_Cancel GetOrderDetailsResult_WithdrawalRepriceOption = 2
    GetOrderDetailsResult_WithdrawalRepriceOption_DontReprice GetOrderDetailsResult_WithdrawalRepriceOption = 3

    RegisterHeartbeatRequest_HeartbeatAction_CancelOrders RegisterHeartbeatRequest_HeartbeatAction = 1
    RegisterHeartbeatRequest_HeartbeatAction_SuspendOrders RegisterHeartbeatRequest_HeartbeatAction = 2
    RegisterHeartbeatRequest_HeartbeatAction_SuspendPunter RegisterHeartbeatRequest_HeartbeatAction = 3

    ChangeHeartbeatRegistrationRequest_HeartbeatAction_CancelOrders ChangeHeartbeatRegistrationRequest_HeartbeatAction = 1
    ChangeHeartbeatRegistrationRequest_HeartbeatAction_SuspendOrders ChangeHeartbeatRegistrationRequest_HeartbeatAction = 2
    ChangeHeartbeatRegistrationRequest_HeartbeatAction_SuspendPunter ChangeHeartbeatRegistrationRequest_HeartbeatAction = 3

    PulseResult_HeartbeatAction_CancelOrders PulseResult_HeartbeatAction = 1
    PulseResult_HeartbeatAction_SuspendOrders PulseResult_HeartbeatAction = 2
    PulseResult_HeartbeatAction_SuspendPunter PulseResult_HeartbeatAction = 3
)


// ApiTimes - 
type ApiTimes struct {

    ApiName string `xml:"ApiName,attr"`
    RemainingMS int64 `xml:"RemainingMS,attr"`
}

// AuditLogItem - 
type AuditLogItem struct {

    Time string `xml:"Time,attr"`
    // Placed(1), ExplicitlyUpdated(2), Matched(3), CancelledExplicitly(4), CancelledByReset(5), CancelledOnInRunning(6), Expired(7), MatchedPortionRepricedByR4(8), UnmatchedPortionRepricedByR4(9), UnmatchedPortionCancelledByWithdrawal(10), Voided(11), Settled(12), Suspended(13), Unsuspended(14)
    OrderActionType int64 `xml:"OrderActionType,attr"`
    RequestedStake string `xml:"RequestedStake,attr"`
    TotalStake string `xml:"TotalStake,attr"`
    TotalAgainstStake string `xml:"TotalAgainstStake,attr"`
    RequestedPrice string `xml:"RequestedPrice,attr"`
    AveragePrice string `xml:"AveragePrice,attr"`
    MatchedOrderInformation []MatchedOrderInformationType `xml:"MatchedOrderInformation"`
    CommissionInformation []CommissionInformationType `xml:"CommissionInformation"`
}

// BaseResponse - 
type BaseResponse struct {

    ReturnStatus []ReturnStatus `xml:"ReturnStatus"`
    Timestamp []string `xml:"Timestamp"`
}

// CancelAllOrders - 
type CancelAllOrders struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ CancelAllOrders"`
    CancelAllOrdersRequest CancelAllOrdersRequest `xml:"cancelAllOrdersRequest"`
}

// CancelAllOrdersOnMarket - 
type CancelAllOrdersOnMarket struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ CancelAllOrdersOnMarket"`
    CancelAllOrdersOnMarketRequest CancelAllOrdersOnMarketRequest `xml:"cancelAllOrdersOnMarketRequest"`
}

// CancelAllOrdersOnMarketRequest - 
type CancelAllOrdersOnMarketRequest struct {

    MarketIds []int64 `xml:"MarketIds"`
}

// CancelAllOrdersOnMarketResponse - 
type CancelAllOrdersOnMarketResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ CancelAllOrdersOnMarketResponse"`
    CancelAllOrdersOnMarketResult CancelAllOrdersOnMarketResult `xml:"CancelAllOrdersOnMarketResult"`
}

// CancelAllOrdersOnMarketResponseItem - 
type CancelAllOrdersOnMarketResponseItem struct {

    OrderHandle int64 `xml:"OrderHandle,attr"`
    CancelledForSideStake string `xml:"cancelledForSideStake,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// CancelAllOrdersOnMarketResult - 
type CancelAllOrdersOnMarketResult struct {

    *BaseResponse  
    OrderIds []int64 `xml:"OrderIds"`
    Order []CancelAllOrdersOnMarketResponseItem `xml:"Order"`
}

// CancelAllOrdersRequest - 
type CancelAllOrdersRequest struct {

}

// CancelAllOrdersResponse - 
type CancelAllOrdersResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ CancelAllOrdersResponse"`
    CancelAllOrdersResult CancelAllOrdersResult `xml:"CancelAllOrdersResult"`
}

// CancelAllOrdersResponseItem - 
type CancelAllOrdersResponseItem struct {

    OrderHandle int64 `xml:"OrderHandle,attr"`
    CancelledForSideStake string `xml:"cancelledForSideStake,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// CancelAllOrdersResult - 
type CancelAllOrdersResult struct {

    *BaseResponse  
    CancelledOrdersHandles []CancelAllOrdersResultCancelledOrdersHandles `xml:"CancelledOrdersHandles"`
    Orders []CancelAllOrdersResultOrders `xml:"Orders"`
}

// CancelAllOrdersResultCancelledOrdersHandles - 
type CancelAllOrdersResultCancelledOrdersHandles struct {

    OrderHandle []int64 
}

// CancelAllOrdersResultOrders - 
type CancelAllOrdersResultOrders struct {

    Order []CancelAllOrdersResponseItem 
}

// CancelOrders - 
type CancelOrders struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ CancelOrders"`
    CancelOrdersRequest CancelOrdersRequest `xml:"cancelOrdersRequest"`
}

// CancelOrdersRequest - 
type CancelOrdersRequest struct {

}

// CancelOrdersResponse - 
type CancelOrdersResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ CancelOrdersResponse"`
    CancelOrdersResult CancelOrdersResult `xml:"CancelOrdersResult"`
}

// CancelOrdersResponseItem - 
type CancelOrdersResponseItem struct {

    OrderHandle int64 `xml:"OrderHandle,attr"`
    CancelledForSideStake string `xml:"cancelledForSideStake,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// CancelOrdersResult - 
type CancelOrdersResult struct {

    *BaseResponse  
    CancelledOrdersHandles []CancelOrdersResultCancelledOrdersHandles `xml:"CancelledOrdersHandles"`
    Orders []CancelOrdersResultOrders `xml:"Orders"`
}

// CancelOrdersResultCancelledOrdersHandles - 
type CancelOrdersResultCancelledOrdersHandles struct {

    OrderHandle []int64 
}

// CancelOrdersResultOrders - 
type CancelOrdersResultOrders struct {

    Order []CancelOrdersResponseItem 
}

// ChangeHeartbeatRegistration - 
type ChangeHeartbeatRegistration struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ChangeHeartbeatRegistration"`
    ChangeHeartbeatRegistrationRequest ChangeHeartbeatRegistrationRequest `xml:"changeHeartbeatRegistrationRequest"`
}

// ChangeHeartbeatRegistrationRequest - 
type ChangeHeartbeatRegistrationRequest struct {

    ThresholdMs int64 `xml:"ThresholdMs,attr"`
    // CancelOrders(1), SuspendOrders(2), SuspendPunter(3)
    HeartbeatAction ChangeHeartbeatRegistrationRequest_HeartbeatAction `xml:"HeartbeatAction,attr"`
}

// ChangeHeartbeatRegistrationResponse - 
type ChangeHeartbeatRegistrationResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ChangeHeartbeatRegistrationResponse"`
    ChangeHeartbeatRegistrationResult ChangeHeartbeatRegistrationResult `xml:"ChangeHeartbeatRegistrationResult"`
}

// ChangeHeartbeatRegistrationResult - 
type ChangeHeartbeatRegistrationResult struct {

    *BaseResponse  
}

// ChangePassword - 
type ChangePassword struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ChangePassword"`
    ChangePasswordRequest ChangePasswordRequest `xml:"changePasswordRequest"`
}

// ChangePasswordRequest - 
type ChangePasswordRequest struct {

    Password string `xml:"Password,attr"`
}

// ChangePasswordResponse - 
type ChangePasswordResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ChangePasswordResponse"`
    ChangePasswordResult ChangePasswordResult `xml:"ChangePasswordResult"`
}

// ChangePasswordResult - 
type ChangePasswordResult struct {

    *BaseResponse  
}

// CommissionInformationType - 
type CommissionInformationType struct {

    GrossSettlementAmount string `xml:"GrossSettlementAmount,attr"`
    OrderCommission string `xml:"OrderCommission,attr"`
}

// DeregisterHeartbeat - 
type DeregisterHeartbeat struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ DeregisterHeartbeat"`
    DeregisterHeartbeatRequest DeregisterHeartbeatRequest `xml:"deregisterHeartbeatRequest"`
}

// DeregisterHeartbeatRequest - 
type DeregisterHeartbeatRequest struct {

}

// DeregisterHeartbeatResponse - 
type DeregisterHeartbeatResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ DeregisterHeartbeatResponse"`
    DeregisterHeartbeatResult DeregisterHeartbeatResult `xml:"DeregisterHeartbeatResult"`
}

// DeregisterHeartbeatResult - 
type DeregisterHeartbeatResult struct {

    *BaseResponse  
}

// EventClassifierType - 
type EventClassifierType struct {

    Id int64 `xml:"Id,attr"`
    Name string `xml:"Name,attr"`
    DisplayOrder int64 `xml:"DisplayOrder,attr"`
    IsEnabledForMultiples bool `xml:"IsEnabledForMultiples,attr"`
    ParentId int64 `xml:"ParentId,attr"`
    EventClassifiers []EventClassifierType `xml:"EventClassifiers"`
    Markets []MarketType `xml:"Markets"`
}

// GetAccountBalances - 
type GetAccountBalances struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetAccountBalances"`
    GetAccountBalancesRequest GetAccountBalancesRequest `xml:"getAccountBalancesRequest"`
}

// GetAccountBalancesRequest - 
type GetAccountBalancesRequest struct {

}

// GetAccountBalancesResponse - 
type GetAccountBalancesResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetAccountBalancesResponse"`
    GetAccountBalancesResult GetAccountBalancesResult `xml:"GetAccountBalancesResult"`
}

// GetAccountBalancesResult - Complex type containing basic account information such as Balance, Exposure and Available funds
type GetAccountBalancesResult struct {

    *BaseResponse  
    Currency string `xml:"Currency,attr"`
    Balance string `xml:"Balance,attr"`
    Exposure string `xml:"Exposure,attr"`
    AvailableFunds string `xml:"AvailableFunds,attr"`
    Credit string `xml:"Credit,attr"`
}

// GetCurrentSelectionSequenceNumber - 
type GetCurrentSelectionSequenceNumber struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetCurrentSelectionSequenceNumber"`
    GetCurrentSelectionSequenceNumberRequest GetCurrentSelectionSequenceNumberRequest `xml:"getCurrentSelectionSequenceNumberRequest"`
}

// GetCurrentSelectionSequenceNumberRequest - 
type GetCurrentSelectionSequenceNumberRequest struct {

}

// GetCurrentSelectionSequenceNumberResponse - 
type GetCurrentSelectionSequenceNumberResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetCurrentSelectionSequenceNumberResponse"`
    GetCurrentSelectionSequenceNumberResult GetCurrentSelectionSequenceNumberResult `xml:"GetCurrentSelectionSequenceNumberResult"`
}

// GetCurrentSelectionSequenceNumberResult - 
type GetCurrentSelectionSequenceNumberResult struct {

    *BaseResponse  
    SelectionSequenceNumber int64 `xml:"SelectionSequenceNumber,attr"`
}

// GetEventSubTreeNoSelections - 
type GetEventSubTreeNoSelections struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetEventSubTreeNoSelections"`
    GetEventSubTreeNoSelectionsRequest GetEventSubTreeNoSelectionsRequest `xml:"getEventSubTreeNoSelectionsRequest"`
}

// GetEventSubTreeNoSelectionsRequest - 
type GetEventSubTreeNoSelectionsRequest struct {

    WantDirectDescendentsOnly bool `xml:"WantDirectDescendentsOnly,attr"`
    WantPlayMarkets bool `xml:"WantPlayMarkets,attr"`
    EventClassifierIds []int64 `xml:"EventClassifierIds"`
}

// GetEventSubTreeNoSelectionsResponse - 
type GetEventSubTreeNoSelectionsResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetEventSubTreeNoSelectionsResponse"`
    GetEventSubTreeNoSelectionsResult GetEventSubTreeNoSelectionsResult `xml:"GetEventSubTreeNoSelectionsResult"`
}

// GetEventSubTreeNoSelectionsResult - 
type GetEventSubTreeNoSelectionsResult struct {

    *BaseResponse  
    EventClassifiers []EventClassifierType `xml:"EventClassifiers"`
}

// GetEventSubTreeWithSelections - 
type GetEventSubTreeWithSelections struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetEventSubTreeWithSelections"`
    GetEventSubTreeWithSelectionsRequest GetEventSubTreeWithSelectionsRequest `xml:"getEventSubTreeWithSelectionsRequest"`
}

// GetEventSubTreeWithSelectionsRequest - 
type GetEventSubTreeWithSelectionsRequest struct {

    WantPlayMarkets bool `xml:"WantPlayMarkets,attr"`
    EventClassifierIds []int64 `xml:"EventClassifierIds"`
}

// GetEventSubTreeWithSelectionsResponse - 
type GetEventSubTreeWithSelectionsResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetEventSubTreeWithSelectionsResponse"`
    GetEventSubTreeWithSelectionsResult GetEventSubTreeWithSelectionsResult `xml:"GetEventSubTreeWithSelectionsResult"`
}

// GetEventSubTreeWithSelectionsResult - 
type GetEventSubTreeWithSelectionsResult struct {

    *BaseResponse  
    EventClassifiers []EventClassifierType `xml:"EventClassifiers"`
}

// GetMarketInformation - 
type GetMarketInformation struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetMarketInformation"`
    GetMarketInformationRequest GetMarketInformationRequest `xml:"getMarketInformationRequest"`
}

// GetMarketInformationRequest - 
type GetMarketInformationRequest struct {

    MarketIds []int64 `xml:"MarketIds"`
}

// GetMarketInformationResponse - 
type GetMarketInformationResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetMarketInformationResponse"`
    GetMarketInformationResult GetMarketInformationResult `xml:"GetMarketInformationResult"`
}

// GetMarketInformationResult - 
type GetMarketInformationResult struct {

    *BaseResponse  
    Markets []MarketType `xml:"Markets"`
}

// GetOddsLadder - 
type GetOddsLadder struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetOddsLadder"`
    GetOddsLadderRequest GetOddsLadderRequest `xml:"getOddsLadderRequest"`
}

// GetOddsLadderRequest - 
type GetOddsLadderRequest struct {

    PriceFormat int64 `xml:"PriceFormat,attr"`
}

// GetOddsLadderResponse - 
type GetOddsLadderResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetOddsLadderResponse"`
    GetOddsLadderResult GetOddsLadderResult `xml:"GetOddsLadderResult"`
}

// GetOddsLadderResponseItem - 
type GetOddsLadderResponseItem struct {

    Price string `xml:"price,attr"`
    Representation string `xml:"representation,attr"`
}

// GetOddsLadderResult - 
type GetOddsLadderResult struct {

    *BaseResponse  
    Ladder []GetOddsLadderResponseItem `xml:"Ladder"`
}

// GetOrderDetails - 
type GetOrderDetails struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetOrderDetails"`
    GetOrderDetailsRequest GetOrderDetailsRequest `xml:"getOrderDetailsRequest"`
}

// GetOrderDetailsRequest - 
type GetOrderDetailsRequest struct {

    OrderId int64 `xml:"OrderId,attr"`
}

// GetOrderDetailsResponse - 
type GetOrderDetailsResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetOrderDetailsResponse"`
    GetOrderDetailsResult GetOrderDetailsResult `xml:"GetOrderDetailsResult"`
}

// GetOrderDetailsResult - 
type GetOrderDetailsResult struct {

    *BaseResponse  
    SelectionId int64 `xml:"SelectionId,attr"`
    // Unmatched(1), Matched(2), Cancelled(3), Settled(4), Void(5), Suspended(6)
    OrderStatus GetOrderDetailsResult_OrderStatus `xml:"OrderStatus,attr"`
    IssuedAt string `xml:"IssuedAt,attr"`
    LastChangedAt string `xml:"LastChangedAt,attr"`
    ExpiresAt string `xml:"ExpiresAt,attr"`
    ValidFrom string `xml:"ValidFrom,attr"`
    RestrictOrderToBroker bool `xml:"RestrictOrderToBroker,attr"`
    // Normal(1), FillAndKill(2), FillOrKill(3), FillOrKillDontCancel(4)
    OrderFillType GetOrderDetailsResult_OrderFillType `xml:"OrderFillType,attr"`
    FillOrKillThreshold string `xml:"FillOrKillThreshold,attr"`
    MarketId int64 `xml:"MarketId,attr"`
    // Inactive(1), Active(2), Suspended(3), Completed(4), Settled(6), Voided(7)
    MarketStatus GetOrderDetailsResult_MarketStatus `xml:"MarketStatus,attr"`
    RequestedStake string `xml:"RequestedStake,attr"`
    RequestedPrice string `xml:"RequestedPrice,attr"`
    ExpectedSelectionResetCount int64 `xml:"ExpectedSelectionResetCount,attr"`
    TotalStake string `xml:"TotalStake,attr"`
    UnmatchedStake string `xml:"UnmatchedStake,attr"`
    AveragePrice string `xml:"AveragePrice,attr"`
    MatchingTimeStamp string `xml:"MatchingTimeStamp,attr"`
    Polarity int64 `xml:"Polarity,attr"`
    // Reprice(1), Cancel(2), DontReprice(3)
    WithdrawalRepriceOption GetOrderDetailsResult_WithdrawalRepriceOption `xml:"WithdrawalRepriceOption,attr"`
    CancelOnInRunning bool `xml:"CancelOnInRunning,attr"`
    CancelIfSelectionReset bool `xml:"CancelIfSelectionReset,attr"`
    SequenceNumber int64 `xml:"SequenceNumber,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
    // Win (1), Place (2), MatchOdds (3), OverUnder (4), AsianHandicap (10), TwoBall (11), ThreeBall (12), Unspecified (13), MatchMarket (14), SetMarket (15), Moneyline (16), Total (17), Handicap (18), EachWayNonHandicap (19), EachWayHandicap (20), EachWayTournament (21), RunningBall (22),  MatchBetting (23), MatchBettingInclDraw (24), CorrectScore (25), HalfTimeFullTime (26), TotalGoals (27), GoalsScored (28), Corners (29), OddsOrEvens (30), HalfTimeResult (31), HalfTimeScore (32), MatchOddsExtraTime (33), CorrectScoreExtraTime (34), OverUnderExtraTime (35), ToQualify (36), DrawNoBet (37), HalftimeAsianHcp (39), HalftimeOverUnder (40), NextGoal (41), FirstGoalscorer (42), LastGoalscorer (43), PlayerToScore (44), FirstHalfHandicap (45), FirstHalfTotal (46), SetBetting (47), GroupBetting (48), MatchplaySingle (49), MatchplayFourball (50), MatchplayFoursome (51), TiedMatch (52), TopBatsman (53), InningsRuns (54), TotalTries (55), TotalPoints (56), FrameBetting (57), ToScoreFirst (58), ToScoreLast (59), FirstScoringPlay (60), LastScoringPlay (61), HighestScoringQtr (62), RunLine (63), RoundBetting (64), LineBetting (65)
    MarketType int64 `xml:"MarketType,attr"`
    ExpectedWithdrawalSequenceNumber int64 `xml:"ExpectedWithdrawalSequenceNumber,attr"`
    OrderSettlementInformation []OrderSettlementInformationType `xml:"OrderSettlementInformation"`
    AuditLog []GetOrderDetailsResultAuditLog `xml:"AuditLog"`
}

// GetOrderDetailsResultAuditLog - 
type GetOrderDetailsResultAuditLog struct {

    AuditLog []AuditLogItem 
}

// GetPrices - 
type GetPrices struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetPrices"`
    GetPricesRequest GetPricesRequest `xml:"getPricesRequest"`
}

// GetPricesRequest - 
type GetPricesRequest struct {

    ThresholdAmount string `xml:"ThresholdAmount,attr"`
    NumberForPricesRequired int64 `xml:"NumberForPricesRequired,attr"`
    NumberAgainstPricesRequired int64 `xml:"NumberAgainstPricesRequired,attr"`
    WantMarketMatchedAmount bool `xml:"WantMarketMatchedAmount,attr"`
    WantSelectionsMatchedAmounts bool `xml:"WantSelectionsMatchedAmounts,attr"`
    WantSelectionMatchedDetails bool `xml:"WantSelectionMatchedDetails,attr"`
    MarketIds []int64 `xml:"MarketIds"`
}

// GetPricesResponse - 
type GetPricesResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetPricesResponse"`
    GetPricesResult GetPricesResult `xml:"GetPricesResult"`
}

// GetPricesResult - 
type GetPricesResult struct {

    *BaseResponse  
    MarketPrices []MarketTypeWithPrices `xml:"MarketPrices"`
}

// GetSPEnabledMarketsInformation - 
type GetSPEnabledMarketsInformation struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetSPEnabledMarketsInformation"`
    GetSPEnabledMarketsInformationRequest GetSPEnabledMarketsInformationRequest `xml:"GetSPEnabledMarketsInformationRequest"`
}

// GetSPEnabledMarketsInformationRequest - 
type GetSPEnabledMarketsInformationRequest struct {

}

// GetSPEnabledMarketsInformationResponse - 
type GetSPEnabledMarketsInformationResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ GetSPEnabledMarketsInformationResponse"`
    GetSPEnabledMarketsInformationResult GetSPEnabledMarketsInformationResult `xml:"GetSPEnabledMarketsInformationResult"`
}

// GetSPEnabledMarketsInformationResult - 
type GetSPEnabledMarketsInformationResult struct {

    *BaseResponse  
    SPEnabledEvent []GetSPEnabledMarketsInformationResultSPEnabledEvent `xml:"SPEnabledEvent"`
}

// GetSPEnabledMarketsInformationResultSPEnabledEvent - 
type GetSPEnabledMarketsInformationResultSPEnabledEvent struct {

    MarketTypeIds []GetSPEnabledMarketsInformationResultSPEnabledEventMarketTypeIds 
}

// GetSPEnabledMarketsInformationResultSPEnabledEventMarketTypeIds - 
type GetSPEnabledMarketsInformationResultSPEnabledEventMarketTypeIds struct {

    MarketTypeId []int64 
}

// ListAccountPostings - 
type ListAccountPostings struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListAccountPostings"`
    ListAccountPostingsRequest ListAccountPostingsRequest `xml:"listAccountPostingsRequest"`
}

// ListAccountPostingsById - 
type ListAccountPostingsById struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListAccountPostingsById"`
    ListAccountPostingsByIdRequest ListAccountPostingsByIdRequest `xml:"listAccountPostingsByIdRequest"`
}

// ListAccountPostingsByIdRequest - 
type ListAccountPostingsByIdRequest struct {

    TransactionId int64 `xml:"TransactionId,attr"`
}

// ListAccountPostingsByIdResponse - 
type ListAccountPostingsByIdResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListAccountPostingsByIdResponse"`
    ListAccountPostingsByIdResult ListAccountPostingsByIdResult `xml:"ListAccountPostingsByIdResult"`
}

// ListAccountPostingsByIdResponseItem - 
type ListAccountPostingsByIdResponseItem struct {

    PostedAt string `xml:"PostedAt,attr"`
    Description string `xml:"Description,attr"`
    Amount string `xml:"Amount,attr"`
    ResultingBalance string `xml:"ResultingBalance,attr"`
    PostingCategory int64 `xml:"PostingCategory,attr"`
    OrderId int64 `xml:"OrderId,attr"`
    MarketId int64 `xml:"MarketId,attr"`
    TransactionId int64 `xml:"TransactionId,attr"`
}

// ListAccountPostingsByIdResult - 
type ListAccountPostingsByIdResult struct {

    *BaseResponse  
    Currency string `xml:"Currency,attr"`
    AvailableFunds string `xml:"AvailableFunds,attr"`
    Balance string `xml:"Balance,attr"`
    Credit string `xml:"Credit,attr"`
    Exposure string `xml:"Exposure,attr"`
    Orders []ListAccountPostingsByIdResultOrders `xml:"Orders"`
}

// ListAccountPostingsByIdResultOrders - 
type ListAccountPostingsByIdResultOrders struct {

    Order []ListAccountPostingsByIdResponseItem 
}

// ListAccountPostingsRequest - 
type ListAccountPostingsRequest struct {

    StartTime string `xml:"StartTime,attr"`
    EndTime string `xml:"EndTime,attr"`
}

// ListAccountPostingsResponse - 
type ListAccountPostingsResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListAccountPostingsResponse"`
    ListAccountPostingsResult ListAccountPostingsResult `xml:"ListAccountPostingsResult"`
}

// ListAccountPostingsResponseItem - 
type ListAccountPostingsResponseItem struct {

    PostedAt string `xml:"PostedAt,attr"`
    Description string `xml:"Description,attr"`
    Amount string `xml:"Amount,attr"`
    ResultingBalance string `xml:"ResultingBalance,attr"`
    PostingCategory int64 `xml:"PostingCategory,attr"`
    OrderId int64 `xml:"OrderId,attr"`
    MarketId int64 `xml:"MarketId,attr"`
    TransactionId int64 `xml:"TransactionId,attr"`
}

// ListAccountPostingsResult - 
type ListAccountPostingsResult struct {

    *BaseResponse  
    Currency string `xml:"Currency,attr"`
    AvailableFunds string `xml:"AvailableFunds,attr"`
    Balance string `xml:"Balance,attr"`
    Credit string `xml:"Credit,attr"`
    Exposure string `xml:"Exposure,attr"`
    HaveAllPostingsBeenReturned bool `xml:"HaveAllPostingsBeenReturned,attr"`
    Orders []ListAccountPostingsResultOrders `xml:"Orders"`
}

// ListAccountPostingsResultOrders - 
type ListAccountPostingsResultOrders struct {

    Order []ListAccountPostingsResponseItem 
}

// ListBlacklistInformation - 
type ListBlacklistInformation struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListBlacklistInformation"`
    ListBlacklistInformationRequest ListBlacklistInformationRequest `xml:"listBlacklistInformationRequest"`
}

// ListBlacklistInformationRequest - 
type ListBlacklistInformationRequest struct {

}

// ListBlacklistInformationResponse - 
type ListBlacklistInformationResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListBlacklistInformationResponse"`
    ListBlacklistInformationResult ListBlacklistInformationResult `xml:"ListBlacklistInformationResult"`
}

// ListBlacklistInformationResult - 
type ListBlacklistInformationResult struct {

    *BaseResponse  
    ApiNamesAndTimes []ApiTimes `xml:"ApiNamesAndTimes"`
}

// ListBootstrapOrders - 
type ListBootstrapOrders struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListBootstrapOrders"`
    ListBootstrapOrdersRequest ListBootstrapOrdersRequest `xml:"listBootstrapOrdersRequest"`
}

// ListBootstrapOrdersRequest - 
type ListBootstrapOrdersRequest struct {

    SequenceNumber []int64 `xml:"SequenceNumber"`
    WantSettledOrdersOnUnsettledMarkets []bool `xml:"wantSettledOrdersOnUnsettledMarkets"`
}

// ListBootstrapOrdersResponse - 
type ListBootstrapOrdersResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListBootstrapOrdersResponse"`
    ListBootstrapOrdersResult ListBootstrapOrdersResult `xml:"ListBootstrapOrdersResult"`
}

// ListBootstrapOrdersResult - 
type ListBootstrapOrdersResult struct {

    *BaseResponse  
    MaximumSequenceNumber int64 `xml:"MaximumSequenceNumber,attr"`
    Orders []ListBootstrapOrdersResultOrders `xml:"Orders"`
}

// ListBootstrapOrdersResultOrders - 
type ListBootstrapOrdersResultOrders struct {

    Order []Order 
}

// ListMarketWithdrawalHistory - 
type ListMarketWithdrawalHistory struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListMarketWithdrawalHistory"`
    ListMarketWithdrawalHistoryRequest ListMarketWithdrawalHistoryRequest `xml:"listMarketWithdrawalHistoryRequest"`
}

// ListMarketWithdrawalHistoryRequest - 
type ListMarketWithdrawalHistoryRequest struct {

    MarketId int64 `xml:"MarketId,attr"`
}

// ListMarketWithdrawalHistoryResponse - 
type ListMarketWithdrawalHistoryResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListMarketWithdrawalHistoryResponse"`
    ListMarketWithdrawalHistoryResult ListMarketWithdrawalHistoryResult `xml:"ListMarketWithdrawalHistoryResult"`
}

// ListMarketWithdrawalHistoryResponseItem - 
type ListMarketWithdrawalHistoryResponseItem struct {

    SelectionId int64 `xml:"SelectionId,attr"`
    WithdrawalTime string `xml:"WithdrawalTime,attr"`
    SequenceNumber int64 `xml:"SequenceNumber,attr"`
    ReductionFactor string `xml:"ReductionFactor,attr"`
    CompoundReductionFactor string `xml:"CompoundReductionFactor,attr"`
}

// ListMarketWithdrawalHistoryResult - 
type ListMarketWithdrawalHistoryResult struct {

    *BaseResponse  
    Withdrawals []ListMarketWithdrawalHistoryResponseItem `xml:"Withdrawals"`
}

// ListOrdersChangedSince - 
type ListOrdersChangedSince struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListOrdersChangedSince"`
    ListOrdersChangedSinceRequest ListOrdersChangedSinceRequest `xml:"listOrdersChangedSinceRequest"`
}

// ListOrdersChangedSinceRequest - 
type ListOrdersChangedSinceRequest struct {

    SequenceNumber []int64 `xml:"SequenceNumber"`
}

// ListOrdersChangedSinceResponse - 
type ListOrdersChangedSinceResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListOrdersChangedSinceResponse"`
    ListOrdersChangedSinceResult ListOrdersChangedSinceResult `xml:"ListOrdersChangedSinceResult"`
}

// ListOrdersChangedSinceResult - 
type ListOrdersChangedSinceResult struct {

    *BaseResponse  
    Orders []ListOrdersChangedSinceResultOrders `xml:"Orders"`
}

// ListOrdersChangedSinceResultOrders - 
type ListOrdersChangedSinceResultOrders struct {

    Order []Order 
}

// ListSelectionTrades - 
type ListSelectionTrades struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListSelectionTrades"`
    ListSelectionTradesRequest ListSelectionTradesRequest `xml:"listSelectionTradesRequest"`
}

// ListSelectionTradesRequest - 
type ListSelectionTradesRequest struct {

    Currency string `xml:"currency,attr"`
    SelectionRequests []SelectionTradesRequestItem `xml:"selectionRequests"`
}

// ListSelectionTradesResponse - 
type ListSelectionTradesResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListSelectionTradesResponse"`
    ListSelectionTradesResult ListSelectionTradesResult `xml:"ListSelectionTradesResult"`
}

// ListSelectionTradesResponseItem - 
type ListSelectionTradesResponseItem struct {

    SelectionId int64 `xml:"selectionId,attr"`
    MaxTradeId int64 `xml:"maxTradeId,attr"`
    MaxTradeIdReturned int64 `xml:"maxTradeIdReturned,attr"`
    TradeItems []TradeItemType `xml:"TradeItems"`
}

// ListSelectionTradesResult - 
type ListSelectionTradesResult struct {

    *BaseResponse  
    SelectionTrades []ListSelectionTradesResponseItem `xml:"SelectionTrades"`
}

// ListSelectionsChangedSince - 
type ListSelectionsChangedSince struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListSelectionsChangedSince"`
    ListSelectionsChangedSinceRequest ListSelectionsChangedSinceRequest `xml:"listSelectionsChangedSinceRequest"`
}

// ListSelectionsChangedSinceRequest - 
type ListSelectionsChangedSinceRequest struct {

    SelectionSequenceNumber int64 `xml:"SelectionSequenceNumber,attr"`
}

// ListSelectionsChangedSinceResponse - 
type ListSelectionsChangedSinceResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListSelectionsChangedSinceResponse"`
    ListSelectionsChangedSinceResult ListSelectionsChangedSinceResult `xml:"ListSelectionsChangedSinceResult"`
}

// ListSelectionsChangedSinceResponseItem - 
type ListSelectionsChangedSinceResponseItem struct {

    Id int64 `xml:"Id,attr"`
    Name string `xml:"Name,attr"`
    DisplayOrder int64 `xml:"DisplayOrder,attr"`
    IsHidden bool `xml:"IsHidden,attr"`
    Status int64 `xml:"Status,attr"`
    ResetCount int64 `xml:"ResetCount,attr"`
    WithdrawalFactor string `xml:"WithdrawalFactor,attr"`
    MarketId int64 `xml:"MarketId,attr"`
    SelectionSequenceNumber int64 `xml:"SelectionSequenceNumber,attr"`
    CancelOrdersTime string `xml:"CancelOrdersTime,attr"`
    SettlementInformation []SettlementInformationType `xml:"SettlementInformation"`
}

// ListSelectionsChangedSinceResult - 
type ListSelectionsChangedSinceResult struct {

    *BaseResponse  
    Selections []ListSelectionsChangedSinceResponseItem `xml:"Selections"`
}

// ListTopLevelEvents - 
type ListTopLevelEvents struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListTopLevelEvents"`
    ListTopLevelEventsRequest ListTopLevelEventsRequest `xml:"listTopLevelEventsRequest"`
}

// ListTopLevelEventsRequest - 
type ListTopLevelEventsRequest struct {

    WantPlayMarkets bool `xml:"WantPlayMarkets,attr"`
}

// ListTopLevelEventsResponse - 
type ListTopLevelEventsResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ ListTopLevelEventsResponse"`
    ListTopLevelEventsResult ListTopLevelEventsResult `xml:"ListTopLevelEventsResult"`
}

// ListTopLevelEventsResult - 
type ListTopLevelEventsResult struct {

    *BaseResponse  
    EventClassifiers []EventClassifierType `xml:"EventClassifiers"`
}

// MarketType - 
type MarketType struct {

    Id int64 `xml:"Id,attr"`
    Name string `xml:"Name,attr"`
    Type int64 `xml:"Type,attr"`
    IsPlayMarket bool `xml:"IsPlayMarket,attr"`
    // Inactive(1), Active(2), Suspended(3), Withdrawn(4), BallotedOut(9), Voided(5), Completed(6), Settled(8)
    Status MarketType_Status `xml:"Status,attr"`
    NumberOfWinningSelections int64 `xml:"NumberOfWinningSelections,attr"`
    StartTime string `xml:"StartTime,attr"`
    WithdrawalSequenceNumber int64 `xml:"WithdrawalSequenceNumber,attr"`
    DisplayOrder int64 `xml:"DisplayOrder,attr"`
    IsEnabledForMultiples bool `xml:"IsEnabledForMultiples,attr"`
    IsInRunningAllowed bool `xml:"IsInRunningAllowed,attr"`
    RaceGrade string `xml:"RaceGrade,attr"`
    IsManagedWhenInRunning bool `xml:"IsManagedWhenInRunning,attr"`
    IsCurrentlyInRunning bool `xml:"IsCurrentlyInRunning,attr"`
    InRunningDelaySeconds int64 `xml:"InRunningDelaySeconds,attr"`
    EventClassifierId int64 `xml:"EventClassifierId,attr"`
    PlacePayout string `xml:"PlacePayout,attr"`
    Selections []SelectionType `xml:"Selections"`
}

// MarketTypeWithPrices - 
type MarketTypeWithPrices struct {

    Id int64 `xml:"Id,attr"`
    Name string `xml:"Name,attr"`
    Type int64 `xml:"Type,attr"`
    IsPlayMarket bool `xml:"IsPlayMarket,attr"`
    Status int64 `xml:"Status,attr"`
    NumberOfWinningSelections int64 `xml:"NumberOfWinningSelections,attr"`
    StartTime string `xml:"StartTime,attr"`
    WithdrawalSequenceNumber int64 `xml:"WithdrawalSequenceNumber,attr"`
    DisplayOrder int64 `xml:"DisplayOrder,attr"`
    IsEnabledForMultiples bool `xml:"IsEnabledForMultiples,attr"`
    IsInRunningAllowed bool `xml:"IsInRunningAllowed,attr"`
    IsManagedWhenInRunning bool `xml:"IsManagedWhenInRunning,attr"`
    IsCurrentlyInRunning bool `xml:"IsCurrentlyInRunning,attr"`
    InRunningDelaySeconds int64 `xml:"InRunningDelaySeconds,attr"`
    ReturnCode int64 `xml:"ReturnCode,attr"`
    TotalMatchedAmount string `xml:"TotalMatchedAmount,attr"`
    PlacePayout string `xml:"PlacePayout,attr"`
    MatchedMarketForStake string `xml:"MatchedMarketForStake,attr"`
    MatchedMarketAgainstStake string `xml:"MatchedMarketAgainstStake,attr"`
    HomeTeamScore int64 `xml:"HomeTeamScore,attr"`
    AwayTeamScore int64 `xml:"AwayTeamScore,attr"`
    ScoreType int64 `xml:"ScoreType,attr"`
    Selections []SelectionTypeWithPrices `xml:"Selections"`
}

// MatchedOrderInformationType - 
type MatchedOrderInformationType struct {

    MatchedStake string `xml:"MatchedStake,attr"`
    MatchedAgainstStake string `xml:"MatchedAgainstStake,attr"`
    PriceMatched string `xml:"PriceMatched,attr"`
    MatchedOrderID int64 `xml:"MatchedOrderID,attr"`
    WasMake bool `xml:"WasMake,attr"`
}

// Order - A type representing an Order
type Order struct {

    Id int64 `xml:"Id,attr"`
    MarketId int64 `xml:"MarketId,attr"`
    SelectionId int64 `xml:"SelectionId,attr"`
    SequenceNumber int64 `xml:"SequenceNumber,attr"`
    IssuedAt string `xml:"IssuedAt,attr"`
    Polarity int64 `xml:"Polarity,attr"`
    UnmatchedStake string `xml:"UnmatchedStake,attr"`
    RequestedPrice string `xml:"RequestedPrice,attr"`
    MatchedPrice string `xml:"MatchedPrice,attr"`
    MatchedStake string `xml:"MatchedStake,attr"`
    TotalForSideMakeStake string `xml:"TotalForSideMakeStake,attr"`
    TotalForSideTakeStake string `xml:"TotalForSideTakeStake,attr"`
    MatchedAgainstStake string `xml:"MatchedAgainstStake,attr"`
    Status int64 `xml:"Status,attr"`
    RestrictOrderToBroker bool `xml:"RestrictOrderToBroker,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
    CancelOnInRunning bool `xml:"CancelOnInRunning,attr"`
    CancelIfSelectionReset bool `xml:"CancelIfSelectionReset,attr"`
    IsCurrentlyInRunning bool `xml:"IsCurrentlyInRunning,attr"`
    PunterCommissionBasis int64 `xml:"PunterCommissionBasis,attr"`
    MakeCommissionRate string `xml:"MakeCommissionRate,attr"`
    TakeCommissionRate string `xml:"TakeCommissionRate,attr"`
    ExpectedSelectionResetCount int64 `xml:"ExpectedSelectionResetCount,attr"`
    ExpectedWithdrawalSequenceNumber int64 `xml:"ExpectedWithdrawalSequenceNumber,attr"`
    OrderFillType int64 `xml:"OrderFillType,attr"`
    FillOrKillThreshold string `xml:"FillOrKillThreshold,attr"`
    OrderCommissionInformation []OrderCommissionInformationType `xml:"OrderCommissionInformation"`
}

// OrderCommissionInformationType - 
type OrderCommissionInformationType struct {

    GrossSettlementAmount string `xml:"GrossSettlementAmount,attr"`
    OrderCommission string `xml:"OrderCommission,attr"`
}

// OrderSettlementInformationType - 
type OrderSettlementInformationType struct {

    GrossSettlementAmount string `xml:"GrossSettlementAmount,attr"`
    OrderCommission string `xml:"OrderCommission,attr"`
    MarketCommission string `xml:"MarketCommission,attr"`
    MarketSettledDate string `xml:"MarketSettledDate,attr"`
}

// PlaceOrdersNoReceipt - 
type PlaceOrdersNoReceipt struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ PlaceOrdersNoReceipt"`
    PlaceOrdersNoReceiptRequest PlaceOrdersNoReceiptRequest `xml:"placeOrdersNoReceiptRequest"`
}

// PlaceOrdersNoReceiptRequest - 
type PlaceOrdersNoReceiptRequest struct {

    Orders []PlaceOrdersNoReceiptRequestOrders `xml:"Orders"`
    WantAllOrNothingBehaviour []bool `xml:"WantAllOrNothingBehaviour"`
}

// PlaceOrdersNoReceiptRequestOrders - 
type PlaceOrdersNoReceiptRequestOrders struct {

    Order []SimpleOrderRequest 
}

// PlaceOrdersNoReceiptResponse - 
type PlaceOrdersNoReceiptResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ PlaceOrdersNoReceiptResponse"`
    PlaceOrdersNoReceiptResult PlaceOrdersNoReceiptResult `xml:"PlaceOrdersNoReceiptResult"`
}

// PlaceOrdersNoReceiptResponseItem - 
type PlaceOrdersNoReceiptResponseItem struct {

    OrderHandle int64 `xml:"OrderHandle,attr"`
    ReturnCode int64 `xml:"ReturnCode,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// PlaceOrdersNoReceiptResult - 
type PlaceOrdersNoReceiptResult struct {

    *BaseResponse  
    OrderHandles []PlaceOrdersNoReceiptResultOrderHandles `xml:"OrderHandles"`
    Orders []PlaceOrdersNoReceiptResultOrders `xml:"Orders"`
}

// PlaceOrdersNoReceiptResultOrderHandles - 
type PlaceOrdersNoReceiptResultOrderHandles struct {

    OrderHandle []int64 
}

// PlaceOrdersNoReceiptResultOrders - 
type PlaceOrdersNoReceiptResultOrders struct {

    Order []PlaceOrdersNoReceiptResponseItem 
}

// PlaceOrdersWithReceipt - 
type PlaceOrdersWithReceipt struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ PlaceOrdersWithReceipt"`
    Orders PlaceOrdersWithReceiptRequest `xml:"orders"`
}

// PlaceOrdersWithReceiptRequest - 
type PlaceOrdersWithReceiptRequest struct {

    Orders []PlaceOrdersWithReceiptRequestOrders `xml:"Orders"`
}

// PlaceOrdersWithReceiptRequestItem - A type representing an Order Request with receipt
type PlaceOrdersWithReceiptRequestItem struct {

    SelectionId int64 `xml:"SelectionId,attr"`
    Stake string `xml:"Stake,attr"`
    Price string `xml:"Price,attr"`
    Polarity int64 `xml:"Polarity,attr"`
    // This value must be set to the selectionResetCount value that is in the Selection object that is returned by GetMarketInformation and GetPrices.  The purpose of this is to ensure that you are aware of the state of the market before placing a bet.  If the expectedSelectionResetCount that you submit to the server is not the same as the selectionResetCount that is on the server, then your bet will NOT be accepted, and you will get a 300 error.
    ExpectedSelectionResetCount int64 `xml:"ExpectedSelectionResetCount,attr"`
    // This value should be set to the withdrawalSequenceNumber value that is in the Market object that is returned by GetMarketInformation and GetPrices.  The purpose of this is to ensure that you are aware of the state of the market before placing a bet.  If the expectedWithdrawalSequenceNumbert that you submit to the server is not the same as the withdrawalSequenceNumber that is on the server, then your bet WILL be accepted, but it will be repriced to allow for the fact that there are more or less selections available on the market than you believed.
    ExpectedWithdrawalSequenceNumber int64 `xml:"ExpectedWithdrawalSequenceNumber,attr"`
    // FillAndKill=2, FillOrKill=3, FillOrKillDontCancel=4, SPIfUnmatched=5
    KillType int64 `xml:"KillType,attr"`
    // This field is required only if killType is set to FillOrKill or FillOrKillDontCancel.
    FillOrKillThreshold string `xml:"FillOrKillThreshold,attr"`
    
    /*
     
              The effect of this option when set to true is to cancel any unmatched bets when the market changes to an in-running market.  This option only applies while the market is NOT in-running.  When the market turns in-running, this option will have no effect.
              This field is required only if killType is set to FillOrKillDontCancel.
            
     */
    CancelOnInRunning bool `xml:"CancelOnInRunning,attr"`
    
    /*
     
              The effect of this option is to cancel any unmatched bets if the selection is reset.  This can occur when the Market is reset (eg a goal is scored in an in-running market).  This defaults to true - unmatched bets will be cancelled if an event occurs in the market such that Betdaq forces the market to be reset
              This field is required only if killType is set to FillOrKillDontCancel.
            
     */
    CancelIfSelectionReset bool `xml:"CancelIfSelectionReset,attr"`
    // This field is required only if killType is set to FillOrKillDontCancel. Reprice(1), Cancel(2), DontReprice(3)
    WithdrawalRepriceOption int64 `xml:"WithdrawalRepriceOption,attr"`
    
    /*
     
              An expires at value set in the past will cause the bet to be cancelled - although the bet status will not immediately be set to Cancelled (this will occur in several moments on the exchange), the bet will not be available for matching.
              This field is optional if killType is set to FillOrKillDontCancel, otherwise not needed at all.
            
     */
    ExpiresAt string `xml:"ExpiresAt,attr"`
    // Deprecated - This field is required only if killType is set to FillOrKillDontCancel.
    RestrictOrderToBroker bool `xml:"RestrictOrderToBroker,attr"`
    // For internal use only
    ChannelTypeInfo string `xml:"ChannelTypeInfo,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// PlaceOrdersWithReceiptRequestOrders - 
type PlaceOrdersWithReceiptRequestOrders struct {

    Order []PlaceOrdersWithReceiptRequestItem 
}

// PlaceOrdersWithReceiptResponse - 
type PlaceOrdersWithReceiptResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ PlaceOrdersWithReceiptResponse"`
    PlaceOrdersWithReceiptResult PlaceOrdersWithReceiptResult `xml:"PlaceOrdersWithReceiptResult"`
}

// PlaceOrdersWithReceiptResponseItem - 
type PlaceOrdersWithReceiptResponseItem struct {

    Status int64 `xml:"Status,attr"`
    MatchedAgainstStake string `xml:"MatchedAgainstStake,attr"`
    MatchedStake string `xml:"MatchedStake,attr"`
    MatchedPrice string `xml:"MatchedPrice,attr"`
    UnmatchedStake string `xml:"UnmatchedStake,attr"`
    Polarity int64 `xml:"Polarity,attr"`
    IssuedAt string `xml:"IssuedAt,attr"`
    SequenceNumber int64 `xml:"SequenceNumber,attr"`
    // Deprecated attribute.
    SelectionId int64 `xml:"SelectionId,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
    OrderHandle int64 `xml:"OrderHandle,attr"`
}

// PlaceOrdersWithReceiptResult - 
type PlaceOrdersWithReceiptResult struct {

    *BaseResponse  
    Orders []PlaceOrdersWithReceiptResultOrders `xml:"Orders"`
}

// PlaceOrdersWithReceiptResultOrders - 
type PlaceOrdersWithReceiptResultOrders struct {

    Order []PlaceOrdersWithReceiptResponseItem 
}

// PricesType - 
type PricesType struct {

    Price string `xml:"Price,attr"`
    Stake string `xml:"Stake,attr"`
}

// Pulse - 
type Pulse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ Pulse"`
    PulseRequest PulseRequest `xml:"pulseRequest"`
}

// PulseRequest - 
type PulseRequest struct {

}

// PulseResponse - 
type PulseResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ PulseResponse"`
    PulseResult PulseResult `xml:"PulseResult"`
}

// PulseResult - 
type PulseResult struct {

    *BaseResponse  
    PerformedAt string `xml:"PerformedAt,attr"`
    // CancelOrders(1), SuspendOrders(2), SuspendPunter(3)
    HeartbeatAction PulseResult_HeartbeatAction `xml:"HeartbeatAction,attr"`
}

// RegisterHeartbeat - 
type RegisterHeartbeat struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ RegisterHeartbeat"`
    RegisterHeartbeatRequest RegisterHeartbeatRequest `xml:"registerHeartbeatRequest"`
}

// RegisterHeartbeatRequest - 
type RegisterHeartbeatRequest struct {

    ThresholdMs int64 `xml:"ThresholdMs,attr"`
    // CancelOrders(1), SuspendOrders(2), SuspendPunter(3)
    HeartbeatAction RegisterHeartbeatRequest_HeartbeatAction `xml:"HeartbeatAction,attr"`
}

// RegisterHeartbeatResponse - 
type RegisterHeartbeatResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ RegisterHeartbeatResponse"`
    RegisterHeartbeatResult RegisterHeartbeatResult `xml:"RegisterHeartbeatResult"`
}

// RegisterHeartbeatResult - 
type RegisterHeartbeatResult struct {

    *BaseResponse  
}

// ReturnStatus - 
type ReturnStatus struct {

    Code int64 `xml:"Code,attr"`
    Description string `xml:"Description,attr"`
    CallId string `xml:"CallId,attr"`
    ExtraInformation string `xml:"ExtraInformation,attr"`
}

// SelectionTradesRequestItem - 
type SelectionTradesRequestItem struct {

    SelectionId int64 `xml:"selectionId,attr"`
    FromTradeId int64 `xml:"fromTradeId,attr"`
}

// SelectionType - 
type SelectionType struct {

    Id int64 `xml:"Id,attr"`
    Name string `xml:"Name,attr"`
    Status int64 `xml:"Status,attr"`
    ResetCount int64 `xml:"ResetCount,attr"`
    DeductionFactor string `xml:"DeductionFactor,attr"`
    DisplayOrder int64 `xml:"DisplayOrder,attr"`
}

// SelectionTypeWithPrices - 
type SelectionTypeWithPrices struct {

    Id int64 `xml:"Id,attr"`
    Name string `xml:"Name,attr"`
    Status int64 `xml:"Status,attr"`
    ResetCount int64 `xml:"ResetCount,attr"`
    DeductionFactor string `xml:"DeductionFactor,attr"`
    MatchedSelectionForStake string `xml:"MatchedSelectionForStake,attr"`
    SelectionOpenInterest string `xml:"SelectionOpenInterest,attr"`
    MarketWinnings string `xml:"MarketWinnings,attr"`
    MarketPositiveWinnings string `xml:"MarketPositiveWinnings,attr"`
    MatchedSelectionAgainstStake string `xml:"MatchedSelectionAgainstStake,attr"`
    LastMatchedOccurredAt string `xml:"LastMatchedOccurredAt,attr"`
    LastMatchedPrice string `xml:"LastMatchedPrice,attr"`
    LastMatchedForSideAmount string `xml:"LastMatchedForSideAmount,attr"`
    LastMatchedAgainstSideAmount string `xml:"LastMatchedAgainstSideAmount,attr"`
    MatchedForSideAmountAtSamePrice string `xml:"MatchedForSideAmountAtSamePrice,attr"`
    MatchedAgainstSideAmountAtSamePrice string `xml:"MatchedAgainstSideAmountAtSamePrice,attr"`
    FirstMatchAtSamePriceOccurredAt string `xml:"FirstMatchAtSamePriceOccurredAt,attr"`
    NumberOrders int64 `xml:"NumberOrders,attr"`
    NumberPunters int64 `xml:"NumberPunters,attr"`
    ForSidePrices []PricesType `xml:"ForSidePrices"`
    AgainstSidePrices []PricesType `xml:"AgainstSidePrices"`
}

// SettlementInformationType - 
type SettlementInformationType struct {

    SettledTime string `xml:"SettledTime,attr"`
    VoidPercentage string `xml:"VoidPercentage,attr"`
    LeftSideFactor string `xml:"LeftSideFactor,attr"`
    RightSideFactor string `xml:"RightSideFactor,attr"`
    SettlementResultString string `xml:"SettlementResultString,attr"`
}

// SimpleOrderRequest - A type representing an Order Request with no receipt
type SimpleOrderRequest struct {

    SelectionId int64 `xml:"SelectionId,attr"`
    Stake string `xml:"Stake,attr"`
    Price string `xml:"Price,attr"`
    Polarity int64 `xml:"Polarity,attr"`
    // This value must be set to the SelectionResetCount value that is in the Selection object that is returned by GetMarketInformation and GetPrices.  The purpose of this is to ensure that you are aware of the state of the market before placing a bet.  If the ExpectedSelectionResetCount that you submit to the server is not the same as the SelectionResetCount that is on the server, then your bet will NOT be accepted, and you will get an error.
    ExpectedSelectionResetCount int64 `xml:"ExpectedSelectionResetCount,attr"`
    // This value should be set to the withdrawalSequenceNumber value that is in the Market object that is returned by GetMarketInformation and GetPrices.  The purpose of this is to ensure that you are aware of the state of the market before placing a bet.  If the expectedWithdrawalSequenceNumbert that you submit to the server is not the same as the withdrawalSequenceNumber that is on the server, then your bet WILL be accepted, but it will be repriced to allow for the fact that there are more or less selections available on the market than you believed.
    ExpectedWithdrawalSequenceNumber int64 `xml:"ExpectedWithdrawalSequenceNumber,attr"`
    // The effect of this option when set to true is to cancel any unmatched orders when the market changes to an in-running market.  This option only applies while the market is NOT in-running.  When the market turns in-running, this option will have no effect.
    CancelOnInRunning bool `xml:"CancelOnInRunning,attr"`
    // The effect of this option is to cancel any unmatched bets if the selection is reset.  This can occur when the Market is reset (eg a goal is scored in an in-running market).  This defaults to true - unmatched bets will be cancelled if an event occurs in the market such that Betdaq forces the market to be reset
    CancelIfSelectionReset bool `xml:"CancelIfSelectionReset,attr"`
    // An expires at value set in the past will cause the bet to be cancelled - although  the bet status will not immediately be set to Cancelled (this will occur in several moments on the exchange), the bet will not be available for matching.
    ExpiresAt string `xml:"ExpiresAt,attr"`
    // Reprice(1), Cancel(2), DontReprice(3)
    WithdrawalRepriceOption SimpleOrderRequest_WithdrawalRepriceOption `xml:"WithdrawalRepriceOption,attr"`
    KillType int64 `xml:"KillType,attr"`
    // This field is required only if killType is set to FillOrKill or FillOrKillDontCancel.
    FillOrKillThreshold string `xml:"FillOrKillThreshold,attr"`
    // Deprecated - This field is required only if killType is set to FillOrKillDontCancel.
    RestrictOrderToBroker bool `xml:"RestrictOrderToBroker,attr"`
    // For internal use only
    ChannelTypeInfo string `xml:"ChannelTypeInfo,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// SuspendAllOrders - 
type SuspendAllOrders struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendAllOrders"`
    SuspendAllOrdersRequest SuspendAllOrdersRequest `xml:"suspendAllOrdersRequest"`
}

// SuspendAllOrdersOnMarket - 
type SuspendAllOrdersOnMarket struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendAllOrdersOnMarket"`
    SuspendAllOrdersOnMarket SuspendAllOrdersOnMarketRequest `xml:"suspendAllOrdersOnMarket"`
}

// SuspendAllOrdersOnMarketRequest - 
type SuspendAllOrdersOnMarketRequest struct {

    MarketId int64 `xml:"MarketId,attr"`
}

// SuspendAllOrdersOnMarketResponse - 
type SuspendAllOrdersOnMarketResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendAllOrdersOnMarketResponse"`
    SuspendAllOrdersOnMarketResult SuspendAllOrdersOnMarketResult `xml:"SuspendAllOrdersOnMarketResult"`
}

// SuspendAllOrdersOnMarketResult - 
type SuspendAllOrdersOnMarketResult struct {

    *BaseResponse  
    Orders []SuspendOrdersResponseItem `xml:"Orders"`
}

// SuspendAllOrdersRequest - 
type SuspendAllOrdersRequest struct {

}

// SuspendAllOrdersResponse - 
type SuspendAllOrdersResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendAllOrdersResponse"`
    SuspendAllOrdersResult SuspendAllOrdersResult `xml:"SuspendAllOrdersResult"`
}

// SuspendAllOrdersResult - 
type SuspendAllOrdersResult struct {

    *BaseResponse  
    Orders []SuspendOrdersResponseItem `xml:"Orders"`
}

// SuspendFromTrading - 
type SuspendFromTrading struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendFromTrading"`
    SuspendFromTradingRequest SuspendFromTradingRequest `xml:"suspendFromTradingRequest"`
}

// SuspendFromTradingRequest - 
type SuspendFromTradingRequest struct {

}

// SuspendFromTradingResponse - 
type SuspendFromTradingResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendFromTradingResponse"`
    SuspendFromTradingResult SuspendFromTradingResult `xml:"SuspendFromTradingResult"`
}

// SuspendFromTradingResult - 
type SuspendFromTradingResult struct {

    *BaseResponse  
}

// SuspendOrders - 
type SuspendOrders struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendOrders"`
    SuspendOrdersRequest SuspendOrdersRequest `xml:"suspendOrdersRequest"`
}

// SuspendOrdersRequest - 
type SuspendOrdersRequest struct {

    OrderIds []int64 `xml:"OrderIds"`
}

// SuspendOrdersResponse - 
type SuspendOrdersResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ SuspendOrdersResponse"`
    SuspendOrdersResult SuspendOrdersResult `xml:"SuspendOrdersResult"`
}

// SuspendOrdersResponseItem - 
type SuspendOrdersResponseItem struct {

    OrderId int64 `xml:"OrderId,attr"`
    SuspendedForSideStake string `xml:"SuspendedForSideStake,attr"`
    PunterReferenceNumber int64 `xml:"PunterReferenceNumber,attr"`
}

// SuspendOrdersResult - 
type SuspendOrdersResult struct {

    *BaseResponse  
    Orders []SuspendOrdersResponseItem `xml:"Orders"`
}

// TradeItemType - 
type TradeItemType struct {

    OccurredAt string `xml:"occurredAt,attr"`
    Price string `xml:"price,attr"`
    BackersStake string `xml:"backersStake,attr"`
    LayersLiability string `xml:"layersLiability,attr"`
    // Back(1), Lay(2)
    TradeType TradeItemType_TradeType `xml:"tradeType,attr"`
}

// UnsuspendFromTrading - 
type UnsuspendFromTrading struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ UnsuspendFromTrading"`
    UnsuspendFromTradingRequest UnsuspendFromTradingRequest `xml:"unsuspendFromTradingRequest"`
}

// UnsuspendFromTradingRequest - 
type UnsuspendFromTradingRequest struct {

}

// UnsuspendFromTradingResponse - 
type UnsuspendFromTradingResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ UnsuspendFromTradingResponse"`
    UnsuspendFromTradingResult UnsuspendFromTradingResult `xml:"UnsuspendFromTradingResult"`
}

// UnsuspendFromTradingResult - 
type UnsuspendFromTradingResult struct {

    *BaseResponse  
}

// UnsuspendOrders - 
type UnsuspendOrders struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ UnsuspendOrders"`
    UnsuspendOrdersRequest UnsuspendOrdersRequest `xml:"unsuspendOrdersRequest"`
}

// UnsuspendOrdersRequest - 
type UnsuspendOrdersRequest struct {

    OrderIds []int64 `xml:"OrderIds"`
}

// UnsuspendOrdersResponse - 
type UnsuspendOrdersResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ UnsuspendOrdersResponse"`
    UnsuspendOrdersResult UnsuspendOrdersResult `xml:"UnsuspendOrdersResult"`
}

// UnsuspendOrdersResult - 
type UnsuspendOrdersResult struct {

    *BaseResponse  
}

// UpdateOrdersNoReceipt - 
type UpdateOrdersNoReceipt struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ UpdateOrdersNoReceipt"`
    UpdateOrdersNoReceiptRequest UpdateOrdersNoReceiptRequest `xml:"updateOrdersNoReceiptRequest"`
}

// UpdateOrdersNoReceiptRequest - 
type UpdateOrdersNoReceiptRequest struct {

    Orders []UpdateOrdersNoReceiptRequestOrders `xml:"Orders"`
}

// UpdateOrdersNoReceiptRequestItem - 
type UpdateOrdersNoReceiptRequestItem struct {

    BetId int64 `xml:"BetId,attr"`
    DeltaStake string `xml:"DeltaStake,attr"`
    Price string `xml:"Price,attr"`
    ExpectedSelectionResetCount int64 `xml:"ExpectedSelectionResetCount,attr"`
    ExpectedWithdrawalSequenceNumber int64 `xml:"ExpectedWithdrawalSequenceNumber,attr"`
    CancelOnInRunning bool `xml:"CancelOnInRunning,attr"`
    CancelIfSelectionReset bool `xml:"CancelIfSelectionReset,attr"`
    SetToBeSPIfUnmatched bool `xml:"SetToBeSPIfUnmatched,attr"`
}

// UpdateOrdersNoReceiptRequestOrders - 
type UpdateOrdersNoReceiptRequestOrders struct {

    Order []UpdateOrdersNoReceiptRequestItem 
}

// UpdateOrdersNoReceiptResponse - 
type UpdateOrdersNoReceiptResponse struct {

    XMLName struct{}  `xml:"http://www.GlobalBettingExchange.com/ExternalAPI/ UpdateOrdersNoReceiptResponse"`
    UpdateOrdersNoReceiptResult UpdateOrdersNoReceiptResult `xml:"UpdateOrdersNoReceiptResult"`
}

// UpdateOrdersNoReceiptResponseItem - 
type UpdateOrdersNoReceiptResponseItem struct {

    BetId int64 `xml:"BetId,attr"`
    ReturnCode int64 `xml:"ReturnCode,attr"`
}

// UpdateOrdersNoReceiptResult - 
type UpdateOrdersNoReceiptResult struct {

    *BaseResponse  
    Orders []UpdateOrdersNoReceiptResultOrders `xml:"Orders"`
}

// UpdateOrdersNoReceiptResultOrders - 
type UpdateOrdersNoReceiptResultOrders struct {

    Order []UpdateOrdersNoReceiptResponseItem 
}

